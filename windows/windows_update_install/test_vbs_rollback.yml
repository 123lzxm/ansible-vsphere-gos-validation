# Copyright 2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Get VM boot info"
  include_tasks: ../../common/vm_get_boot_info.yml
- name: "Enable Secure boot"
  include_tasks: ../secureboot_enable_disable/change_secureboot_config.yml
  vars:
    change_secureboot: 'enable'
  when: (vm_secureboot_enabled is undefined) or (not vm_secureboot_enabled | bool)

- name: "Deploying a Microsoft-signed revocation policy (SkuSiPolicy.p7b)"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: >-
      $PolicyBinary = $env:windir+"\System32\SecureBootUpdates\SkuSiPolicy.p7b";
      $MountPoint = 'C:\EFIMount';
      $EFIDestinationFolder = "$MountPoint\EFI\Microsoft\Boot";
      $EFIPartition = (Get-Partition | Where-Object IsSystem).AccessPaths[0];
      if (-Not (Test-Path $MountPoint)) { New-Item -Path $MountPoint -Type Directory -Force };
      mountvol $MountPoint $EFIPartition;
      if (-Not (Test-Path $EFIDestinationFolder)) { New-Item -Path $EFIDestinationFolder -Type Directory -Force };
      Copy-Item -Path $PolicyBinary -Destination $EFIDestinationFolder -Force;
      mountvol $MountPoint /D;

- name: "Restart guest OS"
  include_tasks: ../utils/win_shutdown_restart.yml
  vars:
    set_win_power_state: "restart"

# Event Viewer: Application and Services logs > Microsoft > Windows > CodeIntegrity > Operational.
# Event ID 3099
# PolicyNameBuffer – Microsoft Windows SKU SI Policy
# PolicyGUID – {976d12c8-cb9f-4730-be52-54600843238e}
# PolicyHash – 107E8FDD187C34CF8B8EA46A4EE99F0DB60F491650DC989DB71B4825DC73169D
- name: "Get event ID 3099"
  include_tasks: ../utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: >-
      $StartTime = (Get-Date).AddDays(-1);
      $EventList = Get-WinEvent -FilterHashtable @{ Logname='Microsoft-Windows-CodeIntegrity/Operational'; ID=3099; StartTime=$StartTime };
      $EventList | Where-Object {$_.Message -Like "Refreshed and activated Code Integrity policy {976d12c8-cb9f-4730-be52-54600843238e} Microsoft Windows SKU SI Policy*"}

- name: "Check if event ID 3099 is logged"
  ansible.builtin.assert:
    that:
      - win_powershell_cmd_output.stdout_lines is defined
      - win_powershell_cmd_output.stdout_lines | length > 0
    fail_msg: "Event ID 3099 is not logged"
    success_msg: "Event ID 3099 is logged and the new policy has been loaded successfully"